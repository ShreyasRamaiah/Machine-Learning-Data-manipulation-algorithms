# -*- coding: utf-8 -*-
"""supportvectormachines

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z4WO67f4gVI1HxFl3EMMCyCrdJI3J4KZ

##SUPPORT VECTOR MACHINES
###SHREYAS SAMPANGI RAMAIAH
###ENG21CS0390
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv("/content/WineQT.csv")
df.head()

df['quality'].value_counts()

df.isnull().sum()

"""###Creating support vector classification model

"""

from sklearn.model_selection import train_test_split
from sklearn.svm import SVC

x = df[df.columns]
x = x.drop('quality', axis=1)
y = df['quality']


X_train, X_test, y_train, y_test = train_test_split(x, y, test_size = 0.33, random_state = 42)


svcmodel = SVC(kernel = 'linear')
svcmodel.fit(X_train, y_train)
svcmodel.score(X_train, y_train)

"""###Making predictions on the training dataset"""

svc_y_train_pred = pd.Series(svcmodel.predict(X_train))
svc_y_train_pred.value_counts()

"""###Making predictions on the testing dataset"""

svc_y_test_pred = pd.Series(svcmodel.predict(X_test))
svc_y_test_pred.value_counts()

"""###Confusion matrix"""

from sklearn.metrics import confusion_matrix, classification_report
confusion_matrix(y_test, svc_y_test_pred)

"""###Classification report"""

print(classification_report(y_test, svc_y_test_pred))