# -*- coding: utf-8 -*-
"""Kmeansclustering

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e-zMBe_lK_SRAEwqs3plwOJEj98ZQTje

##K-Means Clustering
###Shreyas Sampangi Ramaiah
###ENG21CS0390
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

df=pd.read_csv('/content/HR_comma_sep.csv')
df.head()

df.isnull().sum()

"""Creating a new dataframe consisting of columns 'satisfaction_level' and 'average_monthly_hours'"""

new_df = df[["satisfaction_level", "average_montly_hours"]]

new_df.head()

"""Creating a scatter plot with satisfaction_level on the x axis and average_monthly_hours on the y axis"""

plt.figure(figsize = (14,5))
plt.scatter(new_df['satisfaction_level'], new_df['average_montly_hours'])
plt.title('Satisfaction Level vs Average Monthly Hours')
plt.xlabel('Satisfaction Level')
plt.ylabel('Avg Monthly Hours')
plt.show()

"""Determining the clusters for the new dataframe."""

from sklearn.cluster import KMeans
kmeans = KMeans(n_clusters = 5, random_state = 10)
kmeans.fit(new_df)
labels_2d = kmeans.predict(new_df)
print(labels_2d)

"""Adding the predicted labels (labels_2d) to a column named 'label' in the new dataframe."""

import warnings
warnings.filterwarnings("ignore")

new_df['Label'] = labels_2d
new_df.head()

"""Plotting datapoints corresponding to clusters."""

plt.figure(figsize = (14, 5))
plt.scatter(new_df['satisfaction_level'], new_df['average_montly_hours'], c = labels_2d)
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], marker = 'x', c = 'black', s = 75)
plt.title('Satisfaction level vs Average Monthly salary')
plt.xlabel('Satisfaction level')
plt.ylabel('Avg Monthly Salary')
plt.show()

"""selecting K using elbow method."""

wcss = []

clusters = range(1, 11)

for k in clusters :
    k_means = KMeans(n_clusters = k, random_state = 10)
    k_means.fit(new_df)
    wcss.append(k_means.inertia_)

"""Creating a DataFrame with two columns.
First column contains K values from 1 to 10 and second column contains wcss values obtained after the for loop.
"""

wcss_data = pd.DataFrame({'Clusters': clusters, 'WCSS': wcss})
wcss_data

"""Plotting WCSS vs number of clusters"""

plt.figure(figsize=(14,5))
plt.title('WCSS (Within Cluster Sum of Squares)')
plt.plot(clusters, wcss)
plt.xlabel("K")
plt.ylabel("WCSS")
plt.grid()
plt.xticks(range(1,11))
plt.show()

"""Optimal number of clusters of our dataset is 2.
This is because decrease in WCSS is not frastic after K=2.

"""