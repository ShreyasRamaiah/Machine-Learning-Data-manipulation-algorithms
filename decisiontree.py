# -*- coding: utf-8 -*-
"""decisiontree

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OvVrfouVHR2UoarONqPM5lvg7C-6MHf1

##DECISION TREE CLASSIFIER
###SHREYAS SAMPANGI RAMAIAH
###ENG21CS0390
"""

import pandas as pd
import numpy as np
import seaborn as sns

df=pd.read_csv('/content/WineQT.csv')
df.head()

df.isnull().sum()

df.shape

feat=df.columns
zeroval=(df[feat]==0)
zeroval.sum()

sns.pairplot(data=df, hue='quality')

#creating the correlation matrix
sns.heatmap(df.corr())

target=df['quality']
x=df.copy()
x=df.drop('quality', axis=1)
y=target

"""###Splitting the data into 70-30"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(x , y, test_size = 0.3, random_state = 42)
print("Training split input- ", X_train.shape)
print("Testing split input- ", X_test.shape)

"""###Creating the decision tree classifier"""

from sklearn.tree import DecisionTreeClassifier
dectree=DecisionTreeClassifier()
dectree.fit(X_train,y_train)
print('Decision Tree Classifier Created')

"""###Classification Report"""

from sklearn.metrics import classification_report, confusion_matrix
y_pred = dectree.predict(X_test)
print("Classification report:\n", classification_report(y_test,y_pred))

"""###Confusion matrix:"""

con_matrix = confusion_matrix(y_test,y_pred)
print(con_matrix)

"""###Visualizing the decision tree:"""

from sklearn.tree import plot_tree
dec_tree = plot_tree(decision_tree=dectree, feature_names = x.columns, max_depth=2,
                     class_names =['3', '4', '5', '6', '7', '8'] , filled = True , precision = 4, rounded = True)